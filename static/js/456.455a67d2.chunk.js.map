{"version":3,"file":"static/js/456.455a67d2.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/UserForm/UserForm.styled.jsx","components/UserForm/UserForm.jsx","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import styled from 'styled-components';\nimport { Field} from 'formik';\n\nexport const Wrap = styled.div`\n  margin: 151px 32 32 32;\n  border-radius: 16px;\n  max-width: 100%;\n  min-height: 752px;\n\n  background-color: #ffffff;\n\n  @media (min-width: 768px) {\n    margin: 132px 32 32 32;\n    padding: 60px 165px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1087px;\n    min-height: 752px;\n    margin: 116px 32 32 32;\n  }\n`;\n   \nexport const AvatarWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const AvatarBox = styled.div`\n  position: relative;\n  width: 124px;\n  height: 124px;\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 2px solid #3e85f3;\n  background-color: #f8f8f8;\n  margin-bottom: 20px;\n`;\n\nexport const AvatarSvg = styled.div`\n  width: 24px;\n  height: 24px;\n  position: absolute;\n  top: 100px;\n  right: 24px;\n  border-radius: 50%;\n  background-color: #3e85f3;\n  font-size: 20px;\n  color: #ffffff;\n  align-content: center;\n`;\n\nexport const UserWrapInfo = styled.div`\n  margin-bottom: 44px;\n  align-items: center;\n`;\n\nexport const UserName = styled.p`\n  margin-bottom: 8px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 0;\n  color: #343434;\n`;\n\nexport const User = styled.p`\n  color: #343434;\n  font-weight: 600;\n  font-size: 14px;\n`;\n\nexport const FormInputWrap = styled.div`\n  padding-left: auto;\n  padding-left: auto;\n  margin-bottom: 88px;\n\n  @media (min-width: 768px) {\n  }\n\n  @media (min-width: 1440px) {\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n    gap: 30px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: calc((18 / 14) * 100%);\n`;\n\nexport const Input = styled(Field)`\n  margin-top: 8px;\n  margin-bottom: 24px;\n  width: 100%;\n  height: 46px;\n  border: 1px solid rgba(17, 17, 17, 0.15);\n  border-radius: 8px;\n  padding: 14px 0 14px 18px;\n  @media (min-width: 768px) {\n    width: 354px;\n    height: 46px;\n  }\n\n  @media (min-width: 1440px) {\n  }\n  &:hover,\n  &:focus {\n  }\n`;\n\nexport const FormBtnWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const FormBtn = styled.button`\n  color: #ffffff;\n  background-color: #3e85f3;\n  text-transform: none;\n  width: 262px;\n  height: 48px;\n  font-weight: 600;\n  font-size: 14px;\n  border: none;\n  border-radius: 16px;\n`;\n","import { Formik, Form } from 'formik';\nimport {\n  AvatarWrap,\n  Wrap,\n  AvatarBox,\n  AvatarSvg,\n  Label,\n  UserWrapInfo,\n  User,\n  UserName,\n  FormInputWrap,\n  Input,\n  FormBtnWrap,\n  FormBtn,\n} from './UserForm.styled';\n\n\n\nexport const UserForm = () => {\n  return (\n    <Wrap>\n      <AvatarWrap>\n        <div>\n          <AvatarBox>\n            <label htmlFor=\"avatar\">\n              <AvatarSvg>+</AvatarSvg>\n            </label>\n          </AvatarBox>\n          <input\n            type=\"file\"\n            id=\"avatar\"\n            name=\"avatar\"\n            //   onChange={}\n            style={{ display: 'none' }}\n          />\n          <UserWrapInfo>\n            <UserName>User nickname</UserName>\n            <User>User</User>\n          </UserWrapInfo>\n        </div>\n      </AvatarWrap>\n      <div>\n        <Formik\n          initialValues={{\n            userName: '',\n            birthday: '',\n            email: '',\n            phone: '',\n            skype: '',\n          }}\n          onSubmit={async values => {\n            await new Promise(r => setTimeout(r, 500));\n            alert(JSON.stringify(values, null, 2));\n          }}\n        >\n          {({ errors, touched }) => (\n            <Form>\n              <FormInputWrap>\n                <div style={{ width: '354px' }}>\n                 \n                    <Label htmlFor=\"firstName\">User Name</Label>\n                    <div style={{ position: 'relative' }}>\n                      <Input\n                        id=\"userName\"\n                        name=\"userName\"\n                        placeholder=\"Text Your Name\"\n                      />\n                    \n                  </div>\n\n                  <Label htmlFor=\"birthday\">Birthday</Label>\n                  <div style={{ position: 'relative' }}>\n                    <Input\n                      id=\"birthday\"\n                      name=\"birthday\"\n                      placeholder=\"Text Your Birthday\"\n                    />\n                  </div>\n                  <Label htmlFor=\"email\">Email</Label>\n                  <div style={{ position: 'relative' }}>\n                    <Input\n                      id=\"email\"\n                      name=\"email\"\n                      placeholder=\"example: jane@acme.com\"\n                      type=\"email\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <Label htmlFor=\"phone\">Phone</Label>\n                  <div style={{ position: 'relative' }}>\n                    <Input id=\"phone\" name=\"phone\" placeholder=\"7732897309\" />\n                  </div>\n                  <Label htmlFor=\"skype\">Skype</Label>\n                  <div style={{ position: 'relative' }}>\n                    <Input\n                      id=\"skype\"\n                      name=\"skype\"\n                      placeholder=\"Do You have Skype?\"\n                    />\n                  </div>\n                </div>\n              </FormInputWrap>\n              <FormBtnWrap>\n                <FormBtn type=\"submit\">Save changes</FormBtn>\n              </FormBtnWrap>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </Wrap>\n  );\n};\n","import { UserForm } from 'components/UserForm/UserForm';\n\nexport default function CalendarPage() {\n  return (\n    <div>\n      <h1>User Page</h1>\n      <UserForm />\n    </div>\n  );\n}\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","Wrap","styled","AvatarWrap","AvatarBox","AvatarSvg","UserWrapInfo","UserName","User","FormInputWrap","Label","Input","Field","FormBtnWrap","FormBtn","UserForm","htmlFor","type","id","name","style","display","initialValues","userName","birthday","email","phone","skype","onSubmit","fn","values","r","setTimeout","alert","JSON","stringify","self","this","args","arguments","apply","err","undefined","errors","touched","width","position","placeholder","CalendarPage"],"sourceRoot":""}