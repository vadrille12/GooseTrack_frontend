{"version":3,"file":"static/js/294.9deac145.chunk.js","mappings":"+MAEaA,EAAsBC,EAAAA,GAAAA,QAAH,wvBAkCnBC,EAAiBD,EAAAA,GAAAA,IAAH,qsB,iGCvBrBE,EAAmB,SAAAC,GACvB,IAAQC,EAAuBD,EAAvBC,EAAGC,EAAoBF,EAApBE,EAAGC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,MAEfC,EAASH,GAAW,IAANA,EADL,GACwB,GAEvC,OACE,0BACE,iBACED,EAAGA,EAAI,EAAIE,EAAQ,EACnBD,EAAGG,EACHC,KAAK,UACLC,WAAW,SACXC,iBAAiB,SALnB,mBAOMJ,EAPN,QAWL,EAEKK,EAAO,CACX,CACEC,KAAM,QACNC,QAAS,GACTC,MAAO,IAET,CACEF,KAAM,cACNC,QAAS,GACTC,MAAO,IAET,CACEF,KAAM,OACNC,QAAS,GACTC,MAAO,KAIEC,EAAkB,WAC7B,OACE,SAACC,EAAA,EAAD,CAAqBX,MAAM,OAAOY,OAAO,OAAzC,UACE,UAACC,EAAA,EAAD,CACEb,MAAO,IACPY,OAAQ,IACRN,KAAMA,EACNQ,eAAgB,GAChBC,OAAQ,GALV,WAOE,2BACE,4BAAgBC,GAAG,SAASC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAApD,WACE,iBAAMC,OAAO,KAAKC,UAAU,qBAAqBC,YAAa,KAC9D,iBACEF,OAAO,OACPC,UAAU,qBACVC,YAAa,UAInB,2BACE,4BAAgBP,GAAG,SAASC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAApD,WACE,iBAAMC,OAAO,KAAKC,UAAU,oBAAoBC,YAAa,KAC7D,iBAAMF,OAAO,OAAOC,UAAU,oBAAoBC,YAAa,UAGnE,SAACC,EAAA,EAAD,CAAe1B,EAAG,IAAK2B,OAAO,UAAUC,UAAU,KAClD,SAACC,EAAA,EAAD,CAAOC,QAAQ,OAAOC,SAAU,EAAGC,WAAY,GAAIL,OAAO,MAC1D,SAACM,EAAA,EAAD,CACEC,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KAC3BC,SAAS,OACTC,UAAU,EACVC,UAAU,EACVC,UAAW,EACXN,WAAY,GACZO,SAAU,GACVC,MAAO,CACLrC,MAAO,QACPgC,SAAU,MACVZ,OAAQ,KACRgB,SAAU,KACVE,WAAY,MACZC,MAAO,cAGX,SAACC,EAAA,EAAD,CACEC,UAAW,CACTC,gBAAiB,qBACjBH,MAAO,wBAGX,SAACI,EAAA,EAAD,CACEC,SAAS,SACTC,SAAU,EACVlC,OAAQ,GACRmC,cAAc,SAEhB,SAACC,EAAA,EAAD,CACEzC,KAAK,SACLqB,QAAQ,QACRzB,KAAK,eACL8C,QAAS,GACTC,OAAQ,GALV,UAOE,SAACC,EAAA,EAAD,CACElB,SAAS,MACTI,SAAU,GACVE,WAAY,IACZa,QAASxD,OAGb,SAACoD,EAAA,EAAD,CACEzC,KAAK,WACLqB,QAAQ,UACRzB,KAAK,eACL8C,QAAS,GACTC,OAAQ,GALV,UAOE,SAACC,EAAA,EAAD,CACElB,SAAS,MACTI,SAAU,GACVE,WAAY,IACZa,QAASxD,UAMpB,ECnIc,SAASyD,IACtB,OACE,SAAC5D,EAAD,WACE,SAACE,EAAD,WACE,SAACe,EAAD,OAIP,C","sources":["pages/StatisticsPage/StatisticsPage.styled.jsx","components/StatisticsChart/StatisticsChart.jsx","pages/StatisticsPage/StatisticsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StatisticsContainer = styled.section`\n  border-radius: 16px;\n  background-color: #ffffff;\n  @media screen and (max-width: 375px) {\n    max-width: 335px;\n  }\n\n  @media screen and (min-width: 376px) and (max-width: 767px) {\n    width: 335px;\n    border-radius: 16px;\n    padding-top: 28px;\n    padding-bottom: 135px;\n    padding-left: 14px;\n    padding-right: 14px;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    width: 704px;\n    height: 100px;\n    padding-top: 140px;\n    padding-bottom: 224px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1087px;\n    padding-top: 142px;\n    padding-bottom: 104px;\n    padding-left: 113px;\n    padding-right: 114px;\n  }\n`;\n\nexport const ChartContainer = styled.div`\n  margin-top: auto;\n\n  border-radius: 29px;\n  border: 0.8px solid #e3f3ff;\n  @media screen and (max-width: 375px) {\n    max-width: 307px;\n  }\n\n  @media screen and (min-width: 376px) and (max-width: 767px) {\n    width: 307px;\n    height: 413px;\n    padding-top: 40px;\n    padding-bottom: 40px;\n    padding-left: 14px;\n    padding-right: 14px;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    width: 640px;\n    height: 424px;\n    padding-top: 32px;\n    padding-bottom: 32px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 860px;\n    height: 440px;\n    padding: 40px;\n  }\n`;\n","import React from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LabelList,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst percentagesLabel = props => {\n  const { x, y, width, value } = props;\n  const radius = 10;\n  const labelY = y - (y === 0 ? radius : 0);\n\n  return (\n    <svg>\n      <text\n        x={x + 2 + width / 2}\n        y={labelY}\n        fill=\"#343434\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n      >\n        {`${value}%`}\n      </text>\n    </svg>\n  );\n};\n\nconst data = [\n  {\n    name: 'To Do',\n    byMonth: 40,\n    byDay: 80,\n  },\n  {\n    name: 'In Progress',\n    byMonth: 90,\n    byDay: 30,\n  },\n  {\n    name: 'Done',\n    byMonth: 75,\n    byDay: 40,\n  },\n];\n\nexport const StatisticsChart = () => {\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <BarChart\n        width={500}\n        height={300}\n        data={data}\n        barCategoryGap={75}\n        barGap={14}\n      >\n        <defs>\n          <linearGradient id=\"colorM\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"0%\" stopColor=\"rgb(255, 210, 221)\" stopOpacity={0} />\n            <stop\n              offset=\"100%\"\n              stopColor=\"rgb(255, 210, 221)\"\n              stopOpacity={1}\n            />\n          </linearGradient>\n        </defs>\n        <defs>\n          <linearGradient id=\"colorD\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"0%\" stopColor=\"rgb(62, 133, 243)\" stopOpacity={0} />\n            <stop offset=\"100%\" stopColor=\"rgb(62, 133, 243)\" stopOpacity={1} />\n          </linearGradient>\n        </defs>\n        <CartesianGrid x={100} stroke=\"#E3F3FF\" vertical={false} />\n        <XAxis dataKey=\"name\" tickSize={0} tickMargin={16} stroke=\"\" />\n        <YAxis\n          ticks={[0, 20, 40, 60, 80, 100]}\n          position=\"left\"\n          axisLine={false}\n          tickLine={false}\n          tickCount={6}\n          tickMargin={20}\n          fontSize={14}\n          label={{\n            value: 'Tasks',\n            position: 'top',\n            offset: '50',\n            fontSize: '14',\n            fontWeight: '600',\n            color: '#343434',\n          }}\n        ></YAxis>\n        <Tooltip\n          itemStyle={{\n            backgroundColor: 'rgb(255, 210, 221)',\n            color: 'rgb(62, 133, 243)',\n          }}\n        />\n        <Legend\n          iconType=\"circle\"\n          iconSize={8}\n          height={90}\n          verticalAlign=\"top\"\n        />\n        <Bar\n          name=\"By Day\"\n          dataKey=\"byDay\"\n          fill=\"url(#colorM)\"\n          barSize={27}\n          radius={10}\n        >\n          <LabelList\n            position=\"top\"\n            fontSize={16}\n            fontWeight={500}\n            content={percentagesLabel}\n          ></LabelList>\n        </Bar>\n        <Bar\n          name=\"By Month\"\n          dataKey=\"byMonth\"\n          fill=\"url(#colorD)\"\n          barSize={27}\n          radius={10}\n        >\n          <LabelList\n            position=\"top\"\n            fontSize={16}\n            fontWeight={500}\n            content={percentagesLabel}\n          ></LabelList>\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n","import React from 'react';\nimport {\n  StatisticsContainer,\n  ChartContainer,\n} from 'pages/StatisticsPage/StatisticsPage.styled';\n\nimport { StatisticsChart } from 'components/StatisticsChart/StatisticsChart';\n\nexport default function StatisticsPage() {\n  return (\n    <StatisticsContainer>\n      <ChartContainer>\n        <StatisticsChart />\n      </ChartContainer>\n    </StatisticsContainer>\n  );\n}\n"],"names":["StatisticsContainer","styled","ChartContainer","percentagesLabel","props","x","y","width","value","labelY","fill","textAnchor","dominantBaseline","data","name","byMonth","byDay","StatisticsChart","ResponsiveContainer","height","BarChart","barCategoryGap","barGap","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","stroke","vertical","XAxis","dataKey","tickSize","tickMargin","YAxis","ticks","position","axisLine","tickLine","tickCount","fontSize","label","fontWeight","color","Tooltip","itemStyle","backgroundColor","Legend","iconType","iconSize","verticalAlign","Bar","barSize","radius","LabelList","content","StatisticsPage"],"sourceRoot":""}