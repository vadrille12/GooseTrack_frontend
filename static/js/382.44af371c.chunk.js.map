{"version":3,"file":"static/js/382.44af371c.chunk.js","mappings":"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","sources":["images/Icon.svg","components/AuthNavigate/AuthNavigate.styled.jsx","components/AuthNavigate/AuthNavigate.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.5 1.5H12.5C13.9001 1.5 14.6002 1.5 15.135 1.77248C15.6054 2.01217 15.9878 2.39462 16.2275 2.86502C16.5 3.3998 16.5 4.09987 16.5 5.5V12.5C16.5 13.9001 16.5 14.6002 16.2275 15.135C15.9878 15.6054 15.6054 15.9878 15.135 16.2275C14.6002 16.5 13.9001 16.5 12.5 16.5H11.5M7.33333 4.83333L11.5 9M11.5 9L7.33333 13.1667M11.5 9L1.5 9\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcon);\nexport default __webpack_public_path__ + \"static/media/Icon.023fdfdffec2b43c232c1941d7d1f222.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const RedirectLink = styled(Link)`\n  display: block;\n\n  font-family: Inter;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.16;\n  text-align: center;\n\n  color: #3E85F3;\n  text-decoration: underline;\n\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { RedirectLink } from './AuthNavigate.styled';\n\nexport const AuthNavigate = ({ link, text }) => {\n  return (\n    <div>\n      <RedirectLink to={link}>{text}</RedirectLink>\n    </div>\n  );\n};\n\nAuthNavigate.propTypes = {\n  link: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikErrorMessage,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  padding: 40px 24px;\n\n  background-color: #ffffff;\n  border-radius: 8px;\n\n  @media screen and (max-width: 345px) {\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 40px;\n  }\n`;\n\nexport const Title = styled.p`\n  margin-top: 0;\n  margin-bottom: 32px;\n\n  font-family: Inter;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.33;\n\n  color: #3e85f3;\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    font-size: 24px;\n    line-height: 1;\n  }\n`;\n\nexport const Label = styled.label`\n  font-family: Inter;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.25;\n\n  color: #111111;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.21;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 18px;\n    }\n  }\n\n  &:nth-of-type(3) {\n    margin-bottom: 32px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 48px;\n    }\n  }\n\n  &.is-valid {\n    color: #3cbc81;\n  }\n\n  &.is-invalid {\n    color: #e74a3b;\n  }\n\n  & p {\n    margin: 0;\n    padding: 0;\n    margin-top: 8px;\n    margin-left: 18px;\n    color: 3CBC81;\n  }\n\n  & .error-success {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nexport const Field = styled(FormikField)`\n  box-sizing: border-box;\n  width: 100%;\n  padding: 14px;\n\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.29px;\n\n  color: #111111;\n  outline: none;\n  border: 1px solid rgba(17, 17, 17, 0.15);\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    padding: 18px;\n    font-size: 16px;\n    line-height: 1.12;\n  }\n\n  &::placeholder {\n    font-family: Inter;\n    font-size: 14px;\n    line-height: 1.29;\n    color: rgba(17, 17, 17, 0.15);\n\n    @media screen and (min-width: 768px) {\n      font-size: 16px;\n      line-height: 1.12;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    border: 1px solid #111111;\n  }\n\n  &.is-valid {\n    border: 1px solid #3cbc81;\n  }\n\n  &.is-invalid {\n    border: 1px solid #e74a3b;\n  }\n`;\n\nexport const PasswordInput = styled.div`\n  position: relative;\n  margin-top: 8px;\n`;\n\nexport const Input = styled.div`\n  position: relative;\n  margin-top: 8px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 11px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n\n  font-family: Inter;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.28px;\n  letter-spacing: -0.02em;\n\n  border: none;\n  border-radius: 16px;\n  box-shadow: 4px 2px 16px rgba(136, 165, 191, 0.48);\n\n  color: #ffffff;\n  background-color: #3e85f3;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n    padding-top: 16px;\n    padding-bottom: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: #2b78ef;\n  }\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  margin-left: 18px;\n  margin-top: 8px;\n  color: #da1414;\n`;\n","import * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { ReactComponent as IconButton } from 'images/Icon.svg';\n\nimport {\n  Form,\n  Title,\n  Label,\n  Field,\n  ErrorMessage,\n  Input,\n  PasswordInput,\n  Button,\n} from './RegisterForm.styled';\n\nconst userSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Name is required')\n    .matches(/^\\S[\\S\\s]{0,28}\\S$/, 'Name must be between 2 and 30 characters')\n    .test(\n      'name-validation',\n      'Name must be at least 2 characters long',\n      value => {\n        return value && value.replace(/\\s/g, '').length >= 2;\n      }\n    ),\n  email: Yup.string()\n    .email('This is an ERROR email')\n    .matches(/^[a-zA-Z0-9@.]+$/, 'Email must contain only Latin characters')\n    .required('Email is required'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(6, 'Password must be at least 6 characters long')\n    .matches(/^\\S*$/, 'Password must not contain spaces'),\n});\n\nexport const RegisterForm = () => {\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={userSchema}\n    >\n      {({ isSubmitting, values, errors, touched }) => {\n        const isValid = field =>\n          touched[field] && errors[field]\n            ? 'is-invalid'\n            : touched[field]\n            ? 'is-valid'\n            : '';\n\n        return (\n          <Form>\n            <Title>Sign Up</Title>\n            <Label className={isValid('name')}>\n              Name\n              <Input>\n                <Field\n                  className={isValid('name')}\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Enter your name\"\n                />\n              </Input>\n              {isValid('name') === 'is-valid' && <p>This is a CORRECT name</p>}\n              <ErrorMessage name=\"name\" component=\"div\" />\n            </Label>\n            <Label className={isValid('email')}>\n              Email\n              <Input>\n                <Field\n                  className={isValid('email')}\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Enter email\"\n                  title=\"Email must be in the format username@domain.com\"\n                  value={values.email}\n                />\n              </Input>\n              {isValid('email') === 'is-valid' && (\n                <p>This is a CORRECT email</p>\n              )}\n              <ErrorMessage name=\"email\" component=\"div\" />\n            </Label>\n            <Label className={isValid('password')}>\n              Password\n              <PasswordInput>\n                <Field\n                  className={isValid('password')}\n                  name=\"password\"\n                  placeholder=\"Enter password\"\n                  value={values.password}\n                />\n              </PasswordInput>\n              {isValid('password') === 'is-valid' && (\n                <p>This is a CORRECT password</p>\n              )}\n              <ErrorMessage name=\"password\" component=\"div\" />\n            </Label>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? 'Submitting' : 'Sign Up'}\n              <IconButton\n                style={{ width: '18px', height: '18px', color: '#000000' }}\n              />\n            </Button>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nimport goose1x from 'images/signUpPage/desktop_signUp.png';\nimport goose2x from 'images/signUpPage/desktop_signUp@2x.png';\n\nexport const Container = styled.div`\n  position: relative;\n  min-height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  background-color: #dcebf7;\n`;\n\nexport const FormBox = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 18px;\n\n  @media screen and (max-width: 374px) {\n    width: 100%;\n    max-width: 335px;\n  }\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 480px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const ImgContainer = styled.div`\n  position: absolute;\n  width: 400px;\n  height: 416px;\n  left: 49px;\n  bottom: 0;\n\n  background-image: url(${goose1x});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n\n  @media screen and (min-device-pixel-ratio: 2) {\n    background-image: url(${goose2x});\n  }\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n`;\n","import React from 'react';\n\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { AuthNavigate } from 'components/AuthNavigate/AuthNavigate';\nimport { Container, FormBox, ImgContainer } from './RegisterPage.styled';\n\nexport default function RegisterPage() {\n  return (\n    <Container>\n      <FormBox>\n        <RegisterForm />\n      </FormBox>\n\n      <AuthNavigate link=\"/login\" text=\"Log In\" />\n\n      <ImgContainer />\n    </Container>\n  );\n}\n"],"names":["_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgIcon","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","RedirectLink","styled","Link","AuthNavigate","link","text","to","Form","FormikForm","Title","Label","Field","FormikField","PasswordInput","Input","Button","ErrorMessage","FormikErrorMessage","userSchema","Yup","shape","name","required","matches","test","value","replace","email","password","min","RegisterForm","initialValues","validationSchema","isSubmitting","values","errors","touched","isValid","field","className","type","placeholder","component","disabled","Icon","style","color","Container","FormBox","ImgContainer","goose1x","goose2x","RegisterPage"],"sourceRoot":""}